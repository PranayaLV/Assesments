# -*- coding: utf-8 -*-
"""LVADSUSR176-PYTHON-IA2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1LvF0IzBXxUR4n_TtgyMedWnsgjWhubNe
"""

import pandas as pd
import numpy as np

#1
arr = np.array([12,3,33,32,22,2])
print("Mean: ",np.mean(arr) )
print("Max: ",np.max(arr) )
print("Min: ",np.min(arr) )

print("Std Dev: ",np.std(arr) )
print("Sum: ",np.sum(arr) )

#2
health_data = np.array([[160, 70, 30],   # height, weight, age for individual 1
                        [165, 65, 35],   # height, weight, age for individual 2
                        [170, 75, 40]])  # height, weight, age for individual 3

def normal(health_data):
  means = np.mean(health_data, axis = 0)
  std = np.std(health_data, axis = 0)
  normalize  = (health_data - means) / std
  return normalize
print(normal(health_data))

#3
scores = np.array([
    [2,3,1,4,5],
    [4,4,5,1,2],
    [3,2,-1,4,4]
])
scores = pd.DataFrame(scores)
scores = scores.loc[:,2:]

#4
spaced = np.linspace(15,25,24)
print(spaced)

#5
daily_closing_prices = np.array([100, 102, 98, 105, 107, 110, 108, 112, 115, 118, 120])
window_size = 5
ma = []
for i in range(len(daily_closing_prices) - window_size -1):
  ma.append(np.mean(daily_closing_prices[i:window_size]))
print(ma)

#6

#7
properties_matrix = np.array([[1, 2, 3],
                              [4, 5, 6],
                              [7, 8, 9]])
# np.linlanv.det(properties_matrix)

# 8
arr = np.array([[1, 2, 3], [4, 5, 6], [7, 8, 9]])

mask = arr <= 5
arr[mask]

#9
data = {'Name': ['Alice', 'Bob', 'Charlie', 'David', 'Eve', 'Frank', 'Grace'],
        'Age': [25, 30, 35, 40, 45, 50, 55],
        'City': ['New York', 'Los Angeles', 'Chicago', 'Houston', 'Phoenix', 'Miami', 'Boston'],
        'Department': ['HR', 'IT', 'Finance', 'Marketing', 'Sales', 'IT', 'HR']}
data = pd.DataFrame(data)
mask = (data['Age'] < 45) & (data["Department"]!='HR')
data[mask][["Name","City"]]

#10
data = {'Department': ['Electronics', 'Electronics', 'Clothing', 'Clothing', 'Home Goods'],
        'Salesperson': ['Alice', 'Bob', 'Charlie', 'David', 'Eve'],
        'Sales': [70000, 50000, 30000, 40000, 60000]}
data = pd.DataFrame(data)
print(data.groupby(["Department",'Salesperson'])['Sales'].sum())

# 11
data = {
    'Product': ['Apples', 'Bananas', 'Cherries', 'Dates', 'Elderberries', 'Flour', 'Grapes'],
    'Category': ['Fruit', 'Fruit', 'Fruit', 'Fruit', 'Fruit', 'Bakery', 'Fruit'],
    'Price': [1.20, 0.50, 3.00, 2.50, 4.00, 1.50, 2.00],
    'Promotion': [True, False, True, True, False, True, False]
}
data = pd.DataFrame(data)

df = data[(data['Category'] == "Fruit")]

mask = (data["Price"] >= data["Price"].mean()) & (data['Promotion'] == False)
x = df[mask]["Product"]
print(x)

#12
employee = {
    'Employee': ['Alice', 'Bob', 'Charlie', 'David'],
    'Department': ['HR', 'IT', 'Finance', 'IT'],
    'Manager': ['John', 'Rachel', 'Emily', 'Rachel']
}

# Dataset of employee project assignments
project_data = {
    'Employee': ['Alice', 'Charlie', 'Eve'],
    'Project': ['P1', 'P3', 'P2']
}
e = pd.DataFrame(employee)

#12 continued
p = pd.DataFrame(project_data)
fin = pd.merge(e,p,how ='outer')
print(fin)

#13
q3 = pd.read_csv('/content/Q13_sports_team_stats.csv')
q3["Win loss ratio"] = q3["Wins"] / (q3["GamesPlayed"]- q3["Wins"])
print(q3)

#14
q4 = pd.read_csv('/content/Q14_customer_purchases.csv')
q4["Date"] = pd.to_datetime(q4["Date"])
q4["LoyaltyProgramSignUp"] = pd.to_datetime(q4["LoyaltyProgramSignUp"])
q4["Days between"] = q4["Date"] - q4["LoyaltyProgramSignUp"]
q4["After"] = q4["Date"] > q4["LoyaltyProgramSignUp"]
print(q4.groupby("After")["PurchaseAmount"].mean())

#q14 -- We can observe that the average spending has increased after taking up the loyalty program

#Q15
q5 = pd.read_csv('/content/Q15_student_grades.csv')
grad = pd.DataFrame(q5.groupby("Subject")["Grade"].mean())
print(grad)
print("Students perform best in Science and worst in History")

