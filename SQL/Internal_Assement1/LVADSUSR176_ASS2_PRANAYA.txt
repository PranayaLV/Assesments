1. select machine_id , avg(cost) from l1_maintenance_records 
	group by machine_id  having avg(cost) > @avgcost;

2. create view march24 as select * from l1_maintenance_records  where month(maintenance_date) = 3 
and year(maintenance_date)= 2024;

select maintenance_type from march24 
    group by maintenance_type having count(maintenance_type) = (select count(maintenance_type) from march24 group by maintenance_type
order by count(maintenance_type) desc limit 1 );
                                                                        

3. select technician_name from march24 group by technician_name	
	having count(technician_name) = (select count(technician_name)
										from march24 group by technician_name
                                        order by count(technician_name) 	desc limit 1 )
                                        ;
	select technician_name from march24 group by technician_name	
having avg(cost) = (select avg(cost) from march24 group by technician_name
                                        order by avg(cost) desc limit 1 )
                                        ;
.....................

4. select product_id, avg(incident_count_pre_update - 	incident_count_post_update) as avg_reduction
 	from l2_updates
 	group by product_id;
5. n/a

6. select product_id ,
 	avg((incident_count_pre_update - incident_count_post_update)*100 / 		incident_count_pre_update) 
 	as percent_reduction from l2_updates 
	group by product_id ;
	..........
	we can improve update 100 as it only has 50% reduction in incidents
	it can be achieved by focusing on rnd to resolve the issue
	..........


7.create or replace  view all__ as select v.* , t.outcome , 	p.patient_name  ,
	f.facility_name 
	from l3_visits v 
    left join l3_treatments t using(visit_id)
    left join l3_patients p using(patient_id)
    left join l3_facilities f using(facility_id)
    where month(visit_date) = 3 and year(visit_date) =2024;
select patient_id, group_concat(patient_name), group_concat(facility_name),
	group_concat(reason_for_visit) ,group_concat(outcome)
 from all__ group by patient_id having count(visit_id) > 1 ;


8.  select facility_name from all__ group by facility_name order by 	count(facility_name) desc limit 1;

9. create or replace  view q9 as select v.* , t.outcome as outcome, 	p.patient_name, p.insurance_provider  
	from l3_visits v 
    left join l3_treatments t using(visit_id)
    left join l3_patients p using(patient_id)
    left join l3_facilities f using(facility_id)
    where quarter(visit_date) = 1 and year(visit_date) =2024 and outcome = 	'Complicated';
    
select insurance_provider from q9 group by  insurance_provider order by count(insurance_provider) desc ;

10. n/a 

11. create or replace view salesjoin as select * from l4_sales s 
	left join l4_products p using(product_id) 
	left join l4_stores using(store_id) 
	where quarter(sale_date) =1 and year(sale_date) = 2024;
	select region from salesjoin group by region order by 	sum(price*quantity)  desc limit 1;
12. na








 